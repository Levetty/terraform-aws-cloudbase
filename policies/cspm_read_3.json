{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "s3-outposts:GetAccessPoint",
        "s3-outposts:GetAccessPointPolicy",
        "s3-outposts:GetBucket",
        "s3-outposts:GetBucketPolicy",
        "s3-outposts:GetBucketTagging",
        "s3-outposts:GetLifecycleConfiguration",
        "s3-outposts:List*",
        "s3:DescribeJob",
        "s3:GetAccessGrant",
        "s3:GetAccessGrantsInstance",
        "s3:GetAccessGrantsInstanceForPrefix",
        "s3:GetAccessGrantsInstanceResourcePolicy",
        "s3:GetAccessGrantsLocation",
        "s3:GetAccessPointConfigurationForObjectLambda",
        "s3:GetAccessPointForObjectLambda",
        "s3:GetAccessPointPolicyForObjectLambda",
        "s3:GetAccessPointPolicyStatusForObjectLambda",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketOwnershipControls",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetIntelligentTieringConfiguration",
        "s3:GetJobTagging",
        "s3:GetMultiRegionAccessPoint",
        "s3:GetMultiRegionAccessPointPolicyStatus",
        "s3:GetMultiRegionAccessPointRoutes",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetReplicationConfiguration",
        "s3:GetStorageLensConfiguration",
        "s3:GetStorageLensConfigurationTagging",
        "s3:GetStorageLensDashboard",
        "s3:GetStorageLensGroup",
        "s3:List*",
        "securityhub:BatchGetControlEvaluations",
        "securityhub:BatchGetSecurityControls",
        "securityhub:BatchGetStandardsControlAssociations",
        "securityhub:GetFindings",
        "servicecatalog:Describe*",
        "servicecatalog:GetApplication",
        "servicecatalog:GetAttributeGroup",
        "servicecatalog:List*",
        "servicecatalog:ScanProvisionedProducts",
        "servicecatalog:SearchProducts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:SearchProvisionedProducts",
        "servicediscovery:DiscoverInstances",
        "servicediscovery:DiscoverInstancesRevision",
        "servicediscovery:Get*",
        "servicediscovery:List*",
        "servicequotas:ListServiceQuotas",
        "ses:BatchGetMetricData",
        "ses:GetAddonInstance",
        "ses:GetAddonSubscription",
        "ses:GetArchive",
        "ses:GetArchiveExport",
        "ses:GetArchiveSearch",
        "ses:GetContactList",
        "ses:GetDeliverabilityDashboardOptions",
        "ses:GetEmailIdentityPolicies",
        "ses:GetExportJob",
        "ses:GetImportJob",
        "ses:GetIngressPoint",
        "ses:GetRelay",
        "ses:GetRuleSet",
        "ses:GetSendQuota",
        "ses:GetSendStatistics",
        "ses:GetTrafficPolicy",
        "ses:List*",
        "signer:DescribeSigningJob",
        "signer:GetSigningPlatform",
        "signer:GetSigningProfile",
        "signer:List*",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:GetDataProtectionPolicy",
        "sns:GetEndpointAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSMSSandboxAccountStatus",
        "sns:GetSubscriptionAttributes",
        "sns:List*",
        "sqs:Get*",
        "sqs:List*",
        "ssm:GetCalendarState",
        "ssm:GetCommandInvocation",
        "ssm:GetConnectionStatus",
        "ssm:GetDefaultPatchBaseline",
        "ssm:GetDeployablePatchSnapshotForInstance",
        "ssm:GetDocument",
        "ssm:GetInventory",
        "ssm:GetInventorySchema",
        "ssm:GetMaintenanceWindow",
        "ssm:GetMaintenanceWindowExecution",
        "ssm:GetMaintenanceWindowExecutionTask",
        "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "ssm:GetMaintenanceWindowTask",
        "ssm:GetManifest",
        "ssm:GetOpsItem",
        "ssm:GetOpsMetadata",
        "ssm:GetOpsSummary",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "ssm:GetPatchBaseline",
        "ssm:GetPatchBaselineForPatchGroup",
        "ssm:GetResourcePolicies",
        "ssm:GetServiceSetting",
        "ssm:List*",
        "states:Describe*",
        "states:GetExecutionHistory",
        "states:List*",
        "sts:GetCallerIdentity",
        "timestream:Describe*",
        "timestream:List*",
        "transfer:TestIdentityProvider",
        "voiceid:ListDomains",
        "waf-regional:GetByteMatchSet",
        "waf-regional:GetChangeToken",
        "waf-regional:GetChangeTokenStatus",
        "waf-regional:GetGeoMatchSet",
        "waf-regional:GetIPSet",
        "waf-regional:GetLoggingConfiguration",
        "waf-regional:GetPermissionPolicy",
        "waf-regional:GetRateBasedRule",
        "waf-regional:GetRegexMatchSet",
        "waf-regional:GetRegexPatternSet",
        "waf-regional:GetRule",
        "waf-regional:GetRuleGroup",
        "waf-regional:GetSampledRequests",
        "waf-regional:GetSizeConstraintSet",
        "waf-regional:GetSqlInjectionMatchSet",
        "waf-regional:GetWebACLForResource",
        "waf-regional:GetXssMatchSet",
        "waf-regional:List*",
        "waf:GetByteMatchSet",
        "waf:GetChangeTokenStatus",
        "waf:GetGeoMatchSet",
        "waf:GetIPSet",
        "waf:GetLoggingConfiguration",
        "waf:GetPermissionPolicy",
        "waf:GetRateBasedRule",
        "waf:GetRegexMatchSet",
        "waf:GetRegexPatternSet",
        "waf:GetRule",
        "waf:GetRuleGroup",
        "waf:GetSampledRequests",
        "waf:GetSizeConstraintSet",
        "waf:GetSqlInjectionMatchSet",
        "waf:GetXssMatchSet",
        "waf:List*",
        "wafv2:CheckCapacity",
        "wafv2:Describe*",
        "wafv2:GetIPSet",
        "wafv2:GetLoggingConfiguration",
        "wafv2:GetManagedRuleSet",
        "wafv2:GetMobileSdkRelease",
        "wafv2:GetPermissionPolicy",
        "wafv2:GetRegexPatternSet",
        "wafv2:GetRuleGroup",
        "wafv2:GetSampledRequests",
        "wafv2:GetWebACLForResource",
        "wafv2:List*",
        "wisdom:ListAssistants"
      ],
      "Resource": "*",
      "Effect": "Allow"
    }
  ]
}
